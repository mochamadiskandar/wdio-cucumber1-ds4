{"info":{"type":"runner","start":"2024-07-05T10:35:37.759Z","end":"2024-07-05T10:35:52.720Z","_duration":14961,"cid":"0-0","capabilities":{"myEdgeBrowser":{"acceptInsecureCerts":false,"browserName":"MicrosoftEdge","browserVersion":"126.0.2592.87","fedcm:accounts":true,"ms:edgeOptions":{"debuggerAddress":"localhost:55634"},"msedge":{"msedgedriverVersion":"126.0.2592.87 (883b9421f9ba9ce195934ad8d16cb5215b659245)","userDataDir":"C:\\Users\\NTT\\AppData\\Local\\Temp\\scoped_dir8672_1899906596"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"windows","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:extension:minPinLength":true,"webauthn:extension:prf":true,"webauthn:virtualAuthenticators":true,"wdio:driverPID":8672,"sessionId":"6f5c76c5b05e3bf29ce97c261d720425"},"myChromeBrowser":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"126.0.6478.127","chrome":{"chromedriverVersion":"126.0.6478.127 (a435861f0ca363a64f7485619ee5939833823fce-refs/branch-heads/6478@{#1592})","userDataDir":"C:\\Users\\NTT\\AppData\\Local\\Temp\\scoped_dir20416_711674876"},"fedcm:accounts":true,"goog:chromeOptions":{"debuggerAddress":"localhost:55636"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"windows","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:extension:minPinLength":true,"webauthn:extension:prf":true,"webauthn:virtualAuthenticators":true,"wdio:driverPID":20416,"sessionId":"12fd08090636a02612ed0354bc725f18"}},"sanitizedCapabilities":"","config":{"isW3C":true,"isChrome":false,"isFirefox":false,"isMobile":false,"isIOS":false,"isAndroid":false,"isSauce":false,"isSeleniumStandalone":false,"isBidi":false,"isChromium":false,"sessionId":"","logLevel":"info","capabilities":{},"protocol":"http","hostname":"0.0.0.0","path":"/"},"specs":["file:///D:/PERSONAL/LEARN/QA/github/wdio-cucumber1-ds4/features/step-definitions/login.feature"],"isMultiremote":true,"instanceOptions":{"6f5c76c5b05e3bf29ce97c261d720425":{"protocol":"http","hostname":"0.0.0.0","path":"/","capabilities":{"browserName":"MicrosoftEdge"},"logLevel":"info","connectionRetryTimeout":120000,"connectionRetryCount":3,"logLevels":{},"enableDirectConnect":true,"strictSSL":true,"cacheDir":"C:\\Users\\NTT\\AppData\\Local\\Temp","port":55623,"requestedCapabilities":{"browserName":"MicrosoftEdge"},"automationProtocol":"webdriver","waitforInterval":500,"waitforTimeout":10000,"onReload":[],"beforeCommand":[],"afterCommand":[],"rootDir":"D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4","specs":["./features/**/*.feature"],"suites":{},"exclude":[],"groupLogsByTestSpec":false,"excludeDriverLogs":[],"bail":0,"framework":"cucumber","reporters":["spec","cucumberjs-json",["html-nice",{"outputDir":"./reports/html/html-report-2024-07-05_17-35-33","filename":"master-report-cb67a19e-59fb-4c99-94f2-2a0a22f0f9b5.html","reportTitle":"master-report-9b89f256-5717-45bb-a9bd-7781f1d50552","browserName":"Chrome & Edge","linkScreenshots":false,"showInBrowser":false,"collapseTests":false,"useOnAfterCommandForScreenshot":false}]],"services":[],"maxInstances":5,"maxInstancesPerCapability":100,"injectGlobals":true,"filesToWatch":[],"execArgv":[],"runnerEnv":{},"runner":"local","shard":{"current":1,"total":1},"specFileRetries":0,"specFileRetriesDelay":0,"specFileRetriesDeferred":false,"reporterSyncInterval":100,"reporterSyncTimeout":5000,"cucumberFeaturesWithLineNumbers":[],"autoCompileOpts":{"autoCompile":true,"tsNodeOpts":{"transpileOnly":true},"babelOpts":{}},"mochaOpts":{"timeout":10000},"jasmineOpts":{"defaultTimeoutInterval":10000},"cucumberOpts":{"timeout":60000,"tags":"@login","require":["./features/step-definitions/steps.js"],"backtrace":false,"requireModule":[],"dryRun":false,"failFast":false,"name":[],"snippets":true,"source":true,"strict":false,"tagExpression":"","ignoreUndefinedDefinitions":false},"onPrepare":[],"onWorkerStart":[],"onWorkerEnd":[],"before":[],"beforeSession":[],"beforeSuite":[],"beforeHook":[],"beforeTest":[null],"afterTest":[],"afterHook":[],"afterSuite":[],"afterSession":[],"after":[null],"onComplete":[],"beforeAssertion":[],"afterAssertion":[],"beforeFeature":[null],"beforeScenario":[null],"beforeStep":[],"afterStep":[],"afterScenario":[null],"afterFeature":[],"_":["./wdio.conf.js","./wdio.conf.js"],"cucumber-opts":{"tags":"@login"},"$0":"node_modules\\@wdio\\cli\\bin\\wdio.js","ignoredWorkerServices":[]},"12fd08090636a02612ed0354bc725f18":{"protocol":"http","hostname":"0.0.0.0","path":"/","capabilities":{"browserName":"chrome","goog:chromeOptions":{"binary":"C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe"}},"logLevel":"info","connectionRetryTimeout":120000,"connectionRetryCount":3,"logLevels":{},"enableDirectConnect":true,"strictSSL":true,"cacheDir":"C:\\Users\\NTT\\AppData\\Local\\Temp","port":55622,"requestedCapabilities":{"browserName":"chrome","goog:chromeOptions":{"binary":"C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe"}},"automationProtocol":"webdriver","waitforInterval":500,"waitforTimeout":10000,"onReload":[],"beforeCommand":[],"afterCommand":[],"rootDir":"D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4","specs":["./features/**/*.feature"],"suites":{},"exclude":[],"groupLogsByTestSpec":false,"excludeDriverLogs":[],"bail":0,"framework":"cucumber","reporters":["spec","cucumberjs-json",["html-nice",{"outputDir":"./reports/html/html-report-2024-07-05_17-35-33","filename":"master-report-cb67a19e-59fb-4c99-94f2-2a0a22f0f9b5.html","reportTitle":"master-report-9b89f256-5717-45bb-a9bd-7781f1d50552","browserName":"Chrome & Edge","linkScreenshots":false,"showInBrowser":false,"collapseTests":false,"useOnAfterCommandForScreenshot":false}]],"services":[],"maxInstances":5,"maxInstancesPerCapability":100,"injectGlobals":true,"filesToWatch":[],"execArgv":[],"runnerEnv":{},"runner":"local","shard":{"current":1,"total":1},"specFileRetries":0,"specFileRetriesDelay":0,"specFileRetriesDeferred":false,"reporterSyncInterval":100,"reporterSyncTimeout":5000,"cucumberFeaturesWithLineNumbers":[],"autoCompileOpts":{"autoCompile":true,"tsNodeOpts":{"transpileOnly":true},"babelOpts":{}},"mochaOpts":{"timeout":10000},"jasmineOpts":{"defaultTimeoutInterval":10000},"cucumberOpts":{"timeout":60000,"tags":"@login","require":["./features/step-definitions/steps.js"],"backtrace":false,"requireModule":[],"dryRun":false,"failFast":false,"name":[],"snippets":true,"source":true,"strict":false,"tagExpression":"","ignoreUndefinedDefinitions":false},"onPrepare":[],"onWorkerStart":[],"onWorkerEnd":[],"before":[],"beforeSession":[],"beforeSuite":[],"beforeHook":[],"beforeTest":[null],"afterTest":[],"afterHook":[],"afterSuite":[],"afterSession":[],"after":[null],"onComplete":[],"beforeAssertion":[],"afterAssertion":[],"beforeFeature":[null],"beforeScenario":[null],"beforeStep":[],"afterStep":[],"afterScenario":[null],"afterFeature":[],"_":["./wdio.conf.js","./wdio.conf.js"],"cucumber-opts":{"tags":"@login"},"$0":"node_modules\\@wdio\\cli\\bin\\wdio.js","ignoredWorkerServices":[]}},"retry":0,"failures":1,"retries":0},"metrics":{"passed":17,"skipped":0,"failed":1,"duration":14961,"start":"2024-07-05T10:35:37.760Z","end":"2024-07-05T10:35:52Z"},"title":"master-report-9b89f256-5717-45bb-a9bd-7781f1d50552","suites":[{"type":"feature","start":"2024-07-05T10:35:37.868Z","end":"2024-07-05T10:35:52.365Z","_duration":14489,"uid":"login.feature:3:1","cid":"0-0","file":"D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\features\\step-definitions\\login.feature","title":"Login","tags":[{"location":{"line":2,"column":1},"name":"@login","id":"13754335-1730-4aae-91fc-39f885e9f8d1"}],"tests":[],"hooks":[],"suites":[{"type":"scenario","start":"2024-07-05T10:35:37.926Z","end":"2024-07-05T10:35:46.234Z","_duration":8306,"uid":"0","cid":"0-0","file":"D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\features\\step-definitions\\login.feature","title":"TC-1 Successful login using valid username","fullTitle":"login.feature:3:1: TC-1 Successful login using valid username","tags":[{"name":"@login","astNodeId":"13754335-1730-4aae-91fc-39f885e9f8d1"},{"name":"@TC1","astNodeId":"0855c486-2247-44f2-96b1-106ee24c7b91"},{"name":"@positive","astNodeId":"383ab31c-5fd1-4025-92bd-5637853d15c3"}],"tests":[{"type":"test","start":"2024-07-05T10:35:37.938Z","end":"2024-07-05T10:35:44.758Z","_duration":6820,"uid":"f640eb2f-58a7-4f65-8a26-33c02fd6aabc","cid":"0-0","title":"Given user already on login page","fullTitle":"0: Given user already on login page","output":[{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"cid":"0-0","type":"command"},{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"cid":"0-0","type":"command"},{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"result":{"value":null},"cid":"0-0","type":"result"}],"retries":0,"parent":"0","state":"passed","events":[],"errorIndex":0},{"type":"test","start":"2024-07-05T10:35:44.758Z","end":"2024-07-05T10:35:45.864Z","_duration":1106,"uid":"0b602272-3475-4f14-97a8-efc91e21799e","cid":"0-0","title":"When user login using \"standard_user\" as username and \"secret_sauce\" as password","fullTitle":"0: When user login using \"standard_user\" as username and \"secret_sauce\" as password","output":[{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.3"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.3"}},"cid":"0-0","type":"result"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.3/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.3/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.3/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.3/value","body":{"text":"standard_user"},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.3/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.3/value","body":{"text":"standard_user"},"cid":"0-0","type":"command"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.3/value","body":{"text":"standard_user"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.3/value","body":{"text":"standard_user"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.4"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.4"}},"cid":"0-0","type":"result"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.4/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.4/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.4/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.4/value","body":{"text":"secret_sauce"},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.4/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.4/value","body":{"text":"secret_sauce"},"cid":"0-0","type":"command"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.4/value","body":{"text":"secret_sauce"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.4/value","body":{"text":"secret_sauce"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.5"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.5"}},"cid":"0-0","type":"result"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.5/property/value","body":{},"cid":"0-0","type":"command"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.5/property/value","body":{},"cid":"0-0","type":"command"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.5/property/value","body":{},"result":{"value":"Login"},"cid":"0-0","type":"result"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.5/property/value","body":{},"result":{"value":"Login"},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.5"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.5"}},"cid":"0-0","type":"result"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.5/click","body":{},"cid":"0-0","type":"command"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.5/click","body":{},"cid":"0-0","type":"command"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.5/click","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.5/click","body":{},"result":{"value":null},"cid":"0-0","type":"result"}],"retries":0,"parent":"0","state":"passed","events":[],"errorIndex":0},{"type":"test","start":"2024-07-05T10:35:45.865Z","end":"2024-07-05T10:35:46.227Z","_duration":362,"uid":"a3861711-1efa-41ad-9c7b-0f8308178583","cid":"0-0","title":"Then user is successfully logged in and redirected to the inventory page","fullTitle":"0: Then user is successfully logged in and redirected to the inventory page","output":[{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//span[@data-test='title']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//span[@data-test='title']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//span[@data-test='title']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.25"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//span[@data-test='title']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.18"}},"cid":"0-0","type":"result"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.18","ELEMENT":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.18"}]},"cid":"0-0","type":"command"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.25","ELEMENT":"f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.25"}]},"cid":"0-0","type":"command"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.25","ELEMENT":"f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.25"}]},"result":{"value":true},"cid":"0-0","type":"result"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.18","ELEMENT":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.18"}]},"result":{"value":true},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//span[@data-test='title']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//span[@data-test='title']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//span[@data-test='title']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.25"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//span[@data-test='title']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.18"}},"cid":"0-0","type":"result"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.18","ELEMENT":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.18"}]},"cid":"0-0","type":"command"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.25","ELEMENT":"f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.25"}]},"cid":"0-0","type":"command"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.25","ELEMENT":"f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.25"}]},"result":{"value":true},"cid":"0-0","type":"result"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.18","ELEMENT":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.18"}]},"result":{"value":true},"cid":"0-0","type":"result"}],"retries":0,"parent":"0","state":"passed","events":[],"errorIndex":0}],"hooks":[{"type":"hook","start":"2024-07-05T10:35:37.933Z","end":"2024-07-05T10:35:37.937Z","_duration":4,"uid":"6b6664d9-9371-45fc-b8cf-c5f16d9d2ba9","cid":"0-0","title":"","parent":"0","errors":[]},{"type":"hook","start":"2024-07-05T10:35:46.229Z","end":"2024-07-05T10:35:46.231Z","_duration":2,"uid":"1f16b59f-6b7b-47a9-83a7-dc1752895eb7","cid":"0-0","title":"","parent":"0","errors":[]}],"suites":[],"parent":"login.feature:3:1","hooksAndTests":[{"type":"hook","start":"2024-07-05T10:35:37.933Z","end":"2024-07-05T10:35:37.937Z","_duration":4,"uid":"6b6664d9-9371-45fc-b8cf-c5f16d9d2ba9","cid":"0-0","title":"","parent":"0","errors":[]},{"type":"test","start":"2024-07-05T10:35:37.938Z","end":"2024-07-05T10:35:44.758Z","_duration":6820,"uid":"f640eb2f-58a7-4f65-8a26-33c02fd6aabc","cid":"0-0","title":"Given user already on login page","fullTitle":"0: Given user already on login page","output":[{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"cid":"0-0","type":"command"},{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"cid":"0-0","type":"command"},{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"result":{"value":null},"cid":"0-0","type":"result"}],"retries":0,"parent":"0","state":"passed","events":[],"errorIndex":0},{"type":"test","start":"2024-07-05T10:35:44.758Z","end":"2024-07-05T10:35:45.864Z","_duration":1106,"uid":"0b602272-3475-4f14-97a8-efc91e21799e","cid":"0-0","title":"When user login using \"standard_user\" as username and \"secret_sauce\" as password","fullTitle":"0: When user login using \"standard_user\" as username and \"secret_sauce\" as password","output":[{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.3"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.3"}},"cid":"0-0","type":"result"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.3/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.3/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.3/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.3/value","body":{"text":"standard_user"},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.3/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.3/value","body":{"text":"standard_user"},"cid":"0-0","type":"command"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.3/value","body":{"text":"standard_user"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.3/value","body":{"text":"standard_user"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.4"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.4"}},"cid":"0-0","type":"result"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.4/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.4/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.4/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.4/value","body":{"text":"secret_sauce"},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.4/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.4/value","body":{"text":"secret_sauce"},"cid":"0-0","type":"command"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.4/value","body":{"text":"secret_sauce"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.4/value","body":{"text":"secret_sauce"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.5"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.5"}},"cid":"0-0","type":"result"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.5/property/value","body":{},"cid":"0-0","type":"command"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.5/property/value","body":{},"cid":"0-0","type":"command"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.5/property/value","body":{},"result":{"value":"Login"},"cid":"0-0","type":"result"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.5/property/value","body":{},"result":{"value":"Login"},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.5"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.5"}},"cid":"0-0","type":"result"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.5/click","body":{},"cid":"0-0","type":"command"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.5/click","body":{},"cid":"0-0","type":"command"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.5/click","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.5/click","body":{},"result":{"value":null},"cid":"0-0","type":"result"}],"retries":0,"parent":"0","state":"passed","events":[],"errorIndex":0},{"type":"test","start":"2024-07-05T10:35:45.865Z","end":"2024-07-05T10:35:46.227Z","_duration":362,"uid":"a3861711-1efa-41ad-9c7b-0f8308178583","cid":"0-0","title":"Then user is successfully logged in and redirected to the inventory page","fullTitle":"0: Then user is successfully logged in and redirected to the inventory page","output":[{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//span[@data-test='title']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//span[@data-test='title']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//span[@data-test='title']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.25"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//span[@data-test='title']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.18"}},"cid":"0-0","type":"result"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.18","ELEMENT":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.18"}]},"cid":"0-0","type":"command"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.25","ELEMENT":"f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.25"}]},"cid":"0-0","type":"command"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.25","ELEMENT":"f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.25"}]},"result":{"value":true},"cid":"0-0","type":"result"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.18","ELEMENT":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.18"}]},"result":{"value":true},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//span[@data-test='title']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//span[@data-test='title']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//span[@data-test='title']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.25"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//span[@data-test='title']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.18"}},"cid":"0-0","type":"result"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.18","ELEMENT":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.18"}]},"cid":"0-0","type":"command"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.25","ELEMENT":"f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.25"}]},"cid":"0-0","type":"command"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.25","ELEMENT":"f.D1612D7F22F974032D11C6F2A9D4C699.d.1B699E66158D5AAF355162EA8FB0512C.e.25"}]},"result":{"value":true},"cid":"0-0","type":"result"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.18","ELEMENT":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.80B627C6C7C5E1597FB91959D3E62DAA.e.18"}]},"result":{"value":true},"cid":"0-0","type":"result"}],"retries":0,"parent":"0","state":"passed","events":[],"errorIndex":0},{"type":"hook","start":"2024-07-05T10:35:46.229Z","end":"2024-07-05T10:35:46.231Z","_duration":2,"uid":"1f16b59f-6b7b-47a9-83a7-dc1752895eb7","cid":"0-0","title":"","parent":"0","errors":[]}],"description":""},{"type":"scenario","start":"2024-07-05T10:35:46.235Z","end":"2024-07-05T10:35:48.658Z","_duration":2421,"uid":"1","cid":"0-0","file":"D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\features\\step-definitions\\login.feature","title":"TC-1 Successful login using valid username","fullTitle":"login.feature:3:1: TC-1 Successful login using valid username","tags":[{"name":"@login","astNodeId":"13754335-1730-4aae-91fc-39f885e9f8d1"},{"name":"@TC1","astNodeId":"0855c486-2247-44f2-96b1-106ee24c7b91"},{"name":"@positive","astNodeId":"383ab31c-5fd1-4025-92bd-5637853d15c3"}],"tests":[{"type":"test","start":"2024-07-05T10:35:46.237Z","end":"2024-07-05T10:35:47.677Z","_duration":1440,"uid":"ef0aba39-6130-4287-87fd-40a24ce1609d","cid":"0-0","title":"Given user already on login page","fullTitle":"1: Given user already on login page","output":[{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"cid":"0-0","type":"command"},{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"cid":"0-0","type":"command"},{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"result":{"value":null},"cid":"0-0","type":"result"}],"retries":0,"parent":"1","state":"passed","events":[],"errorIndex":0},{"type":"test","start":"2024-07-05T10:35:47.678Z","end":"2024-07-05T10:35:48.373Z","_duration":695,"uid":"3d5d2838-cf32-47d2-bdd4-5f3a733a8d59","cid":"0-0","title":"When user login using \"problem_user\" as username and \"secret_sauce\" as password","fullTitle":"1: When user login using \"problem_user\" as username and \"secret_sauce\" as password","output":[{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.32"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.28"}},"cid":"0-0","type":"result"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.28/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.32/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.32/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.32/value","body":{"text":"problem_user"},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.28/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.28/value","body":{"text":"problem_user"},"cid":"0-0","type":"command"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.32/value","body":{"text":"problem_user"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.28/value","body":{"text":"problem_user"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.29"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.33"}},"cid":"0-0","type":"result"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.29/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.33/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.33/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.33/value","body":{"text":"secret_sauce"},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.29/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.29/value","body":{"text":"secret_sauce"},"cid":"0-0","type":"command"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.33/value","body":{"text":"secret_sauce"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.29/value","body":{"text":"secret_sauce"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.34"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.30"}},"cid":"0-0","type":"result"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.30/property/value","body":{},"cid":"0-0","type":"command"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.34/property/value","body":{},"cid":"0-0","type":"command"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.34/property/value","body":{},"result":{"value":"Login"},"cid":"0-0","type":"result"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.30/property/value","body":{},"result":{"value":"Login"},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.30"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.34"}},"cid":"0-0","type":"result"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.30/click","body":{},"cid":"0-0","type":"command"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.34/click","body":{},"cid":"0-0","type":"command"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.30/click","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.34/click","body":{},"result":{"value":null},"cid":"0-0","type":"result"}],"retries":0,"parent":"1","state":"passed","events":[],"errorIndex":0},{"type":"test","start":"2024-07-05T10:35:48.374Z","end":"2024-07-05T10:35:48.654Z","_duration":280,"uid":"846e4f26-070d-4907-bbf1-25c1daba51b2","cid":"0-0","title":"Then user is successfully logged in and redirected to the inventory page","fullTitle":"1: Then user is successfully logged in and redirected to the inventory page","output":[{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//span[@data-test='title']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//span[@data-test='title']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//span[@data-test='title']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.50"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//span[@data-test='title']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.42"}},"cid":"0-0","type":"result"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.42","ELEMENT":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.42"}]},"cid":"0-0","type":"command"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.50","ELEMENT":"f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.50"}]},"cid":"0-0","type":"command"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.50","ELEMENT":"f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.50"}]},"result":{"value":true},"cid":"0-0","type":"result"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.42","ELEMENT":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.42"}]},"result":{"value":true},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//span[@data-test='title']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//span[@data-test='title']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//span[@data-test='title']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.50"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//span[@data-test='title']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.42"}},"cid":"0-0","type":"result"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.42","ELEMENT":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.42"}]},"cid":"0-0","type":"command"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.50","ELEMENT":"f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.50"}]},"cid":"0-0","type":"command"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.50","ELEMENT":"f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.50"}]},"result":{"value":true},"cid":"0-0","type":"result"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.42","ELEMENT":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.42"}]},"result":{"value":true},"cid":"0-0","type":"result"}],"retries":0,"parent":"1","state":"passed","events":[],"errorIndex":0}],"hooks":[{"type":"hook","start":"2024-07-05T10:35:46.235Z","end":"2024-07-05T10:35:46.237Z","_duration":2,"uid":"462b9136-6450-40a5-905f-2da4498eceb6","cid":"0-0","title":"","parent":"1","errors":[]},{"type":"hook","start":"2024-07-05T10:35:48.655Z","end":"2024-07-05T10:35:48.656Z","_duration":1,"uid":"13cb8e29-c5db-448f-af2d-0fd341f05242","cid":"0-0","title":"","parent":"1","errors":[]}],"suites":[],"parent":"login.feature:3:1","hooksAndTests":[{"type":"hook","start":"2024-07-05T10:35:46.235Z","end":"2024-07-05T10:35:46.237Z","_duration":2,"uid":"462b9136-6450-40a5-905f-2da4498eceb6","cid":"0-0","title":"","parent":"1","errors":[]},{"type":"test","start":"2024-07-05T10:35:46.237Z","end":"2024-07-05T10:35:47.677Z","_duration":1440,"uid":"ef0aba39-6130-4287-87fd-40a24ce1609d","cid":"0-0","title":"Given user already on login page","fullTitle":"1: Given user already on login page","output":[{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"cid":"0-0","type":"command"},{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"cid":"0-0","type":"command"},{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"result":{"value":null},"cid":"0-0","type":"result"}],"retries":0,"parent":"1","state":"passed","events":[],"errorIndex":0},{"type":"test","start":"2024-07-05T10:35:47.678Z","end":"2024-07-05T10:35:48.373Z","_duration":695,"uid":"3d5d2838-cf32-47d2-bdd4-5f3a733a8d59","cid":"0-0","title":"When user login using \"problem_user\" as username and \"secret_sauce\" as password","fullTitle":"1: When user login using \"problem_user\" as username and \"secret_sauce\" as password","output":[{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.32"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.28"}},"cid":"0-0","type":"result"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.28/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.32/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.32/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.32/value","body":{"text":"problem_user"},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.28/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.28/value","body":{"text":"problem_user"},"cid":"0-0","type":"command"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.32/value","body":{"text":"problem_user"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.28/value","body":{"text":"problem_user"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.29"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.33"}},"cid":"0-0","type":"result"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.29/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.33/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.33/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.33/value","body":{"text":"secret_sauce"},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.29/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.29/value","body":{"text":"secret_sauce"},"cid":"0-0","type":"command"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.33/value","body":{"text":"secret_sauce"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.29/value","body":{"text":"secret_sauce"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.34"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.30"}},"cid":"0-0","type":"result"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.30/property/value","body":{},"cid":"0-0","type":"command"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.34/property/value","body":{},"cid":"0-0","type":"command"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.34/property/value","body":{},"result":{"value":"Login"},"cid":"0-0","type":"result"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.30/property/value","body":{},"result":{"value":"Login"},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.30"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.34"}},"cid":"0-0","type":"result"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.30/click","body":{},"cid":"0-0","type":"command"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.34/click","body":{},"cid":"0-0","type":"command"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.30/click","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.34/click","body":{},"result":{"value":null},"cid":"0-0","type":"result"}],"retries":0,"parent":"1","state":"passed","events":[],"errorIndex":0},{"type":"test","start":"2024-07-05T10:35:48.374Z","end":"2024-07-05T10:35:48.654Z","_duration":280,"uid":"846e4f26-070d-4907-bbf1-25c1daba51b2","cid":"0-0","title":"Then user is successfully logged in and redirected to the inventory page","fullTitle":"1: Then user is successfully logged in and redirected to the inventory page","output":[{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//span[@data-test='title']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//span[@data-test='title']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//span[@data-test='title']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.50"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//span[@data-test='title']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.42"}},"cid":"0-0","type":"result"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.42","ELEMENT":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.42"}]},"cid":"0-0","type":"command"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.50","ELEMENT":"f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.50"}]},"cid":"0-0","type":"command"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.50","ELEMENT":"f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.50"}]},"result":{"value":true},"cid":"0-0","type":"result"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.42","ELEMENT":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.42"}]},"result":{"value":true},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//span[@data-test='title']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//span[@data-test='title']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//span[@data-test='title']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.50"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//span[@data-test='title']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.42"}},"cid":"0-0","type":"result"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.42","ELEMENT":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.42"}]},"cid":"0-0","type":"command"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.50","ELEMENT":"f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.50"}]},"cid":"0-0","type":"command"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.50","ELEMENT":"f.D1612D7F22F974032D11C6F2A9D4C699.d.198D81487294801A45BAB9C577579685.e.50"}]},"result":{"value":true},"cid":"0-0","type":"result"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.42","ELEMENT":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.08887E825E149F81B8ABBE1147E1AAB7.e.42"}]},"result":{"value":true},"cid":"0-0","type":"result"}],"retries":0,"parent":"1","state":"passed","events":[],"errorIndex":0},{"type":"hook","start":"2024-07-05T10:35:48.655Z","end":"2024-07-05T10:35:48.656Z","_duration":1,"uid":"13cb8e29-c5db-448f-af2d-0fd341f05242","cid":"0-0","title":"","parent":"1","errors":[]}],"description":""},{"type":"scenario","start":"2024-07-05T10:35:48.659Z","end":"2024-07-05T10:35:49.713Z","_duration":1053,"uid":"2","cid":"0-0","file":"D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\features\\step-definitions\\login.feature","title":"TC-2 Login using lock out username","fullTitle":"login.feature:3:1: TC-2 Login using lock out username","tags":[{"name":"@login","astNodeId":"13754335-1730-4aae-91fc-39f885e9f8d1"},{"name":"@TC2","astNodeId":"291c31c4-c99b-4077-ab08-8802a0c8e663"},{"name":"@negative","astNodeId":"f98a16f3-f27b-49d5-869c-aefb24d129bb"},{"name":"@lockout","astNodeId":"e9b88ff8-e230-44eb-b27c-c9931abe1759"}],"tests":[{"type":"test","start":"2024-07-05T10:35:48.662Z","end":"2024-07-05T10:35:48.865Z","_duration":203,"uid":"254d8789-a73f-4477-a2a2-c9bf455230e2","cid":"0-0","title":"Given user already on login page","fullTitle":"2: Given user already on login page","output":[{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"cid":"0-0","type":"command"},{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"cid":"0-0","type":"command"},{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"result":{"value":null},"cid":"0-0","type":"result"}],"retries":0,"parent":"2","state":"passed","events":[],"errorIndex":0},{"type":"test","start":"2024-07-05T10:35:48.866Z","end":"2024-07-05T10:35:49.600Z","_duration":734,"uid":"19705cbd-909b-4fb8-9b6e-440b37662443","cid":"0-0","title":"When user login using \"locked_out_user\" as username and \"secret_sauce\" as password","fullTitle":"2: When user login using \"locked_out_user\" as username and \"secret_sauce\" as password","output":[{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.53"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.48"}},"cid":"0-0","type":"result"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.48/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.53/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.53/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.53/value","body":{"text":"locked_out_user"},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.48/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.48/value","body":{"text":"locked_out_user"},"cid":"0-0","type":"command"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.53/value","body":{"text":"locked_out_user"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.48/value","body":{"text":"locked_out_user"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.54"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.49"}},"cid":"0-0","type":"result"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.49/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.54/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.54/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.54/value","body":{"text":"secret_sauce"},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.49/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.49/value","body":{"text":"secret_sauce"},"cid":"0-0","type":"command"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.54/value","body":{"text":"secret_sauce"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.49/value","body":{"text":"secret_sauce"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.55"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.50"}},"cid":"0-0","type":"result"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.50/property/value","body":{},"cid":"0-0","type":"command"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.55/property/value","body":{},"cid":"0-0","type":"command"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.55/property/value","body":{},"result":{"value":"Login"},"cid":"0-0","type":"result"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.50/property/value","body":{},"result":{"value":"Login"},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.50"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.55"}},"cid":"0-0","type":"result"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.50/click","body":{},"cid":"0-0","type":"command"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.55/click","body":{},"cid":"0-0","type":"command"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.50/click","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.55/click","body":{},"result":{"value":null},"cid":"0-0","type":"result"}],"retries":0,"parent":"2","state":"passed","events":[],"errorIndex":0},{"type":"test","start":"2024-07-05T10:35:49.601Z","end":"2024-07-05T10:35:49.710Z","_duration":109,"uid":"5cbaa8c8-6d6c-46f9-b67d-cf844505cac9","cid":"0-0","title":"Then error popup displays \"Epic sadface: this user has been locked out.\"","fullTitle":"2: Then error popup displays \"Epic sadface: this user has been locked out.\"","output":[{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.64"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.57"}},"cid":"0-0","type":"result"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.57","ELEMENT":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.57"}]},"cid":"0-0","type":"command"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.64","ELEMENT":"f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.64"}]},"cid":"0-0","type":"command"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.64","ELEMENT":"f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.64"}]},"result":{"value":true},"cid":"0-0","type":"result"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.57","ELEMENT":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.57"}]},"result":{"value":true},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.57"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.64"}},"cid":"0-0","type":"result"},{"command":"getElementText","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.57/text","body":{},"cid":"0-0","type":"command"},{"command":"getElementText","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.64/text","body":{},"cid":"0-0","type":"command"},{"command":"getElementText","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.64/text","body":{},"result":{"value":"Epic sadface: Sorry, this user has been locked out."},"cid":"0-0","type":"result"},{"command":"getElementText","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.57/text","body":{},"result":{"value":"Epic sadface: Sorry, this user has been locked out."},"cid":"0-0","type":"result"}],"retries":0,"parent":"2","state":"passed","events":[],"errorIndex":0}],"hooks":[{"type":"hook","start":"2024-07-05T10:35:48.659Z","end":"2024-07-05T10:35:48.661Z","_duration":2,"uid":"38824086-854d-4803-a250-9b190cdedbaa","cid":"0-0","title":"","parent":"2","errors":[]},{"type":"hook","start":"2024-07-05T10:35:49.710Z","end":"2024-07-05T10:35:49.711Z","_duration":1,"uid":"99dfab03-1894-41f9-a1ce-05e8eb8dc470","cid":"0-0","title":"","parent":"2","errors":[]}],"suites":[],"parent":"login.feature:3:1","hooksAndTests":[{"type":"hook","start":"2024-07-05T10:35:48.659Z","end":"2024-07-05T10:35:48.661Z","_duration":2,"uid":"38824086-854d-4803-a250-9b190cdedbaa","cid":"0-0","title":"","parent":"2","errors":[]},{"type":"test","start":"2024-07-05T10:35:48.662Z","end":"2024-07-05T10:35:48.865Z","_duration":203,"uid":"254d8789-a73f-4477-a2a2-c9bf455230e2","cid":"0-0","title":"Given user already on login page","fullTitle":"2: Given user already on login page","output":[{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"cid":"0-0","type":"command"},{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"cid":"0-0","type":"command"},{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"result":{"value":null},"cid":"0-0","type":"result"}],"retries":0,"parent":"2","state":"passed","events":[],"errorIndex":0},{"type":"test","start":"2024-07-05T10:35:48.866Z","end":"2024-07-05T10:35:49.600Z","_duration":734,"uid":"19705cbd-909b-4fb8-9b6e-440b37662443","cid":"0-0","title":"When user login using \"locked_out_user\" as username and \"secret_sauce\" as password","fullTitle":"2: When user login using \"locked_out_user\" as username and \"secret_sauce\" as password","output":[{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.53"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.48"}},"cid":"0-0","type":"result"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.48/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.53/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.53/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.53/value","body":{"text":"locked_out_user"},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.48/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.48/value","body":{"text":"locked_out_user"},"cid":"0-0","type":"command"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.53/value","body":{"text":"locked_out_user"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.48/value","body":{"text":"locked_out_user"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.54"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.49"}},"cid":"0-0","type":"result"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.49/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.54/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.54/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.54/value","body":{"text":"secret_sauce"},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.49/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.49/value","body":{"text":"secret_sauce"},"cid":"0-0","type":"command"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.54/value","body":{"text":"secret_sauce"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.49/value","body":{"text":"secret_sauce"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.55"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.50"}},"cid":"0-0","type":"result"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.50/property/value","body":{},"cid":"0-0","type":"command"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.55/property/value","body":{},"cid":"0-0","type":"command"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.55/property/value","body":{},"result":{"value":"Login"},"cid":"0-0","type":"result"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.50/property/value","body":{},"result":{"value":"Login"},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.50"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.55"}},"cid":"0-0","type":"result"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.50/click","body":{},"cid":"0-0","type":"command"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.55/click","body":{},"cid":"0-0","type":"command"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.50/click","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.55/click","body":{},"result":{"value":null},"cid":"0-0","type":"result"}],"retries":0,"parent":"2","state":"passed","events":[],"errorIndex":0},{"type":"test","start":"2024-07-05T10:35:49.601Z","end":"2024-07-05T10:35:49.710Z","_duration":109,"uid":"5cbaa8c8-6d6c-46f9-b67d-cf844505cac9","cid":"0-0","title":"Then error popup displays \"Epic sadface: this user has been locked out.\"","fullTitle":"2: Then error popup displays \"Epic sadface: this user has been locked out.\"","output":[{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.64"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.57"}},"cid":"0-0","type":"result"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.57","ELEMENT":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.57"}]},"cid":"0-0","type":"command"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.64","ELEMENT":"f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.64"}]},"cid":"0-0","type":"command"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.64","ELEMENT":"f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.64"}]},"result":{"value":true},"cid":"0-0","type":"result"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.57","ELEMENT":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.57"}]},"result":{"value":true},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.57"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.64"}},"cid":"0-0","type":"result"},{"command":"getElementText","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.57/text","body":{},"cid":"0-0","type":"command"},{"command":"getElementText","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.64/text","body":{},"cid":"0-0","type":"command"},{"command":"getElementText","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.2773078808F480E87378C107ED27860C.e.64/text","body":{},"result":{"value":"Epic sadface: Sorry, this user has been locked out."},"cid":"0-0","type":"result"},{"command":"getElementText","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.B3747E575A4DD3E0F8FA65D984E08A15.e.57/text","body":{},"result":{"value":"Epic sadface: Sorry, this user has been locked out."},"cid":"0-0","type":"result"}],"retries":0,"parent":"2","state":"passed","events":[],"errorIndex":0},{"type":"hook","start":"2024-07-05T10:35:49.710Z","end":"2024-07-05T10:35:49.711Z","_duration":1,"uid":"99dfab03-1894-41f9-a1ce-05e8eb8dc470","cid":"0-0","title":"","parent":"2","errors":[]}],"description":""},{"type":"scenario","start":"2024-07-05T10:35:49.714Z","end":"2024-07-05T10:35:50.507Z","_duration":791,"uid":"3","cid":"0-0","file":"D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\features\\step-definitions\\login.feature","title":"TC-3 Login using random username","fullTitle":"login.feature:3:1: TC-3 Login using random username","tags":[{"name":"@login","astNodeId":"13754335-1730-4aae-91fc-39f885e9f8d1"},{"name":"@TC3","astNodeId":"4d5b4cac-3ad7-4d43-8c71-2cf63e08b2e9"},{"name":"@negative","astNodeId":"7cdfe21e-752f-4ec4-88ec-10b0abe0783b"},{"name":"@random","astNodeId":"2f683252-5e57-4372-b895-194be6f2c6b2"}],"tests":[{"type":"test","start":"2024-07-05T10:35:49.716Z","end":"2024-07-05T10:35:49.865Z","_duration":149,"uid":"ebae3b25-527b-462c-a693-21bb816ecbf4","cid":"0-0","title":"Given user already on login page","fullTitle":"3: Given user already on login page","output":[{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"cid":"0-0","type":"command"},{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"cid":"0-0","type":"command"},{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"result":{"value":null},"cid":"0-0","type":"result"}],"retries":0,"parent":"3","state":"passed","events":[],"errorIndex":0},{"type":"test","start":"2024-07-05T10:35:49.866Z","end":"2024-07-05T10:35:50.370Z","_duration":504,"uid":"02f08d97-7c61-470b-87d8-53c2140ef007","cid":"0-0","title":"When user login using \"1234\" as username and \"abcd\" as password","fullTitle":"3: When user login using \"1234\" as username and \"abcd\" as password","output":[{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.68"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.61"}},"cid":"0-0","type":"result"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.61/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.68/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.68/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.68/value","body":{"text":"1234"},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.61/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.61/value","body":{"text":"1234"},"cid":"0-0","type":"command"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.61/value","body":{"text":"1234"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.68/value","body":{"text":"1234"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.69"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.62"}},"cid":"0-0","type":"result"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.62/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.69/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.69/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.69/value","body":{"text":"abcd"},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.62/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.62/value","body":{"text":"abcd"},"cid":"0-0","type":"command"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.69/value","body":{"text":"abcd"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.62/value","body":{"text":"abcd"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.63"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.70"}},"cid":"0-0","type":"result"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.63/property/value","body":{},"cid":"0-0","type":"command"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.70/property/value","body":{},"cid":"0-0","type":"command"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.63/property/value","body":{},"result":{"value":"Login"},"cid":"0-0","type":"result"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.70/property/value","body":{},"result":{"value":"Login"},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.63"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.70"}},"cid":"0-0","type":"result"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.63/click","body":{},"cid":"0-0","type":"command"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.70/click","body":{},"cid":"0-0","type":"command"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.70/click","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.63/click","body":{},"result":{"value":null},"cid":"0-0","type":"result"}],"retries":0,"parent":"3","state":"passed","events":[],"errorIndex":0},{"type":"test","start":"2024-07-05T10:35:50.371Z","end":"2024-07-05T10:35:50.503Z","_duration":132,"uid":"a9e07bbd-910c-4bc6-aada-060068f3e813","cid":"0-0","title":"Then error popup displays \"Epic sadface: Username and password do not match any user in this service\"","fullTitle":"3: Then error popup displays \"Epic sadface: Username and password do not match any user in this service\"","output":[{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.77"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.73"}},"cid":"0-0","type":"result"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.73","ELEMENT":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.73"}]},"cid":"0-0","type":"command"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.77","ELEMENT":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.77"}]},"cid":"0-0","type":"command"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.77","ELEMENT":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.77"}]},"result":{"value":true},"cid":"0-0","type":"result"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.73","ELEMENT":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.73"}]},"result":{"value":true},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.73"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.77"}},"cid":"0-0","type":"result"},{"command":"getElementText","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.73/text","body":{},"cid":"0-0","type":"command"},{"command":"getElementText","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.77/text","body":{},"cid":"0-0","type":"command"},{"command":"getElementText","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.73/text","body":{},"result":{"value":"Epic sadface: Username and password do not match any user in this service"},"cid":"0-0","type":"result"},{"command":"getElementText","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.77/text","body":{},"result":{"value":"Epic sadface: Username and password do not match any user in this service"},"cid":"0-0","type":"result"}],"retries":0,"parent":"3","state":"passed","events":[],"errorIndex":0}],"hooks":[{"type":"hook","start":"2024-07-05T10:35:49.714Z","end":"2024-07-05T10:35:49.715Z","_duration":1,"uid":"7ffed3bc-0629-4553-9429-dbeafbaf6e43","cid":"0-0","title":"","parent":"3","errors":[]},{"type":"hook","start":"2024-07-05T10:35:50.504Z","end":"2024-07-05T10:35:50.505Z","_duration":1,"uid":"0c8cf0fd-0cec-4cc7-92d9-e5333819788e","cid":"0-0","title":"","parent":"3","errors":[]}],"suites":[],"parent":"login.feature:3:1","hooksAndTests":[{"type":"hook","start":"2024-07-05T10:35:49.714Z","end":"2024-07-05T10:35:49.715Z","_duration":1,"uid":"7ffed3bc-0629-4553-9429-dbeafbaf6e43","cid":"0-0","title":"","parent":"3","errors":[]},{"type":"test","start":"2024-07-05T10:35:49.716Z","end":"2024-07-05T10:35:49.865Z","_duration":149,"uid":"ebae3b25-527b-462c-a693-21bb816ecbf4","cid":"0-0","title":"Given user already on login page","fullTitle":"3: Given user already on login page","output":[{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"cid":"0-0","type":"command"},{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"cid":"0-0","type":"command"},{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"result":{"value":null},"cid":"0-0","type":"result"}],"retries":0,"parent":"3","state":"passed","events":[],"errorIndex":0},{"type":"test","start":"2024-07-05T10:35:49.866Z","end":"2024-07-05T10:35:50.370Z","_duration":504,"uid":"02f08d97-7c61-470b-87d8-53c2140ef007","cid":"0-0","title":"When user login using \"1234\" as username and \"abcd\" as password","fullTitle":"3: When user login using \"1234\" as username and \"abcd\" as password","output":[{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.68"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.61"}},"cid":"0-0","type":"result"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.61/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.68/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.68/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.68/value","body":{"text":"1234"},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.61/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.61/value","body":{"text":"1234"},"cid":"0-0","type":"command"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.61/value","body":{"text":"1234"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.68/value","body":{"text":"1234"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.69"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.62"}},"cid":"0-0","type":"result"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.62/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.69/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.69/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.69/value","body":{"text":"abcd"},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.62/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.62/value","body":{"text":"abcd"},"cid":"0-0","type":"command"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.69/value","body":{"text":"abcd"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.62/value","body":{"text":"abcd"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.63"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.70"}},"cid":"0-0","type":"result"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.63/property/value","body":{},"cid":"0-0","type":"command"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.70/property/value","body":{},"cid":"0-0","type":"command"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.63/property/value","body":{},"result":{"value":"Login"},"cid":"0-0","type":"result"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.70/property/value","body":{},"result":{"value":"Login"},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.63"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.70"}},"cid":"0-0","type":"result"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.63/click","body":{},"cid":"0-0","type":"command"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.70/click","body":{},"cid":"0-0","type":"command"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.70/click","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.63/click","body":{},"result":{"value":null},"cid":"0-0","type":"result"}],"retries":0,"parent":"3","state":"passed","events":[],"errorIndex":0},{"type":"test","start":"2024-07-05T10:35:50.371Z","end":"2024-07-05T10:35:50.503Z","_duration":132,"uid":"a9e07bbd-910c-4bc6-aada-060068f3e813","cid":"0-0","title":"Then error popup displays \"Epic sadface: Username and password do not match any user in this service\"","fullTitle":"3: Then error popup displays \"Epic sadface: Username and password do not match any user in this service\"","output":[{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.77"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.73"}},"cid":"0-0","type":"result"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.73","ELEMENT":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.73"}]},"cid":"0-0","type":"command"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.77","ELEMENT":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.77"}]},"cid":"0-0","type":"command"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.77","ELEMENT":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.77"}]},"result":{"value":true},"cid":"0-0","type":"result"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.73","ELEMENT":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.73"}]},"result":{"value":true},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.73"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.77"}},"cid":"0-0","type":"result"},{"command":"getElementText","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.73/text","body":{},"cid":"0-0","type":"command"},{"command":"getElementText","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.77/text","body":{},"cid":"0-0","type":"command"},{"command":"getElementText","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.AF90457ACEE383D419D30BDD2061D074.e.73/text","body":{},"result":{"value":"Epic sadface: Username and password do not match any user in this service"},"cid":"0-0","type":"result"},{"command":"getElementText","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5CD0F74F4A6FA4974B71123F8FF4B98C.e.77/text","body":{},"result":{"value":"Epic sadface: Username and password do not match any user in this service"},"cid":"0-0","type":"result"}],"retries":0,"parent":"3","state":"passed","events":[],"errorIndex":0},{"type":"hook","start":"2024-07-05T10:35:50.504Z","end":"2024-07-05T10:35:50.505Z","_duration":1,"uid":"0c8cf0fd-0cec-4cc7-92d9-e5333819788e","cid":"0-0","title":"","parent":"3","errors":[]}],"description":""},{"type":"scenario","start":"2024-07-05T10:35:50.507Z","end":"2024-07-05T10:35:51.413Z","_duration":905,"uid":"4","cid":"0-0","file":"D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\features\\step-definitions\\login.feature","title":"TC-3 Login using random username","fullTitle":"login.feature:3:1: TC-3 Login using random username","tags":[{"name":"@login","astNodeId":"13754335-1730-4aae-91fc-39f885e9f8d1"},{"name":"@TC3","astNodeId":"4d5b4cac-3ad7-4d43-8c71-2cf63e08b2e9"},{"name":"@negative","astNodeId":"7cdfe21e-752f-4ec4-88ec-10b0abe0783b"},{"name":"@random","astNodeId":"2f683252-5e57-4372-b895-194be6f2c6b2"}],"tests":[{"type":"test","start":"2024-07-05T10:35:50.510Z","end":"2024-07-05T10:35:50.636Z","_duration":126,"uid":"d0dc07b0-cdf0-4231-839b-844cc7123de2","cid":"0-0","title":"Given user already on login page","fullTitle":"4: Given user already on login page","output":[{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"cid":"0-0","type":"command"},{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"cid":"0-0","type":"command"},{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"result":{"value":null},"cid":"0-0","type":"result"}],"retries":0,"parent":"4","state":"passed","events":[],"errorIndex":0},{"type":"test","start":"2024-07-05T10:35:50.636Z","end":"2024-07-05T10:35:51.322Z","_duration":686,"uid":"675c1d61-9eca-4ffd-b893-6c0e422327e4","cid":"0-0","title":"When user login using \"loremIpsum\" as username and \"dolorSitAmet\" as password","fullTitle":"4: When user login using \"loremIpsum\" as username and \"dolorSitAmet\" as password","output":[{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.81"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.77"}},"cid":"0-0","type":"result"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.77/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.81/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.81/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.81/value","body":{"text":"loremIpsum"},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.77/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.77/value","body":{"text":"loremIpsum"},"cid":"0-0","type":"command"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.77/value","body":{"text":"loremIpsum"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.81/value","body":{"text":"loremIpsum"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.82"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.78"}},"cid":"0-0","type":"result"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.78/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.82/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.78/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.78/value","body":{"text":"dolorSitAmet"},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.82/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.82/value","body":{"text":"dolorSitAmet"},"cid":"0-0","type":"command"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.82/value","body":{"text":"dolorSitAmet"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.78/value","body":{"text":"dolorSitAmet"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.83"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.79"}},"cid":"0-0","type":"result"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.79/property/value","body":{},"cid":"0-0","type":"command"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.83/property/value","body":{},"cid":"0-0","type":"command"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.83/property/value","body":{},"result":{"value":"Login"},"cid":"0-0","type":"result"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.79/property/value","body":{},"result":{"value":"Login"},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.83"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.79"}},"cid":"0-0","type":"result"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.79/click","body":{},"cid":"0-0","type":"command"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.83/click","body":{},"cid":"0-0","type":"command"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.83/click","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.79/click","body":{},"result":{"value":null},"cid":"0-0","type":"result"}],"retries":0,"parent":"4","state":"passed","events":[],"errorIndex":0},{"type":"test","start":"2024-07-05T10:35:51.322Z","end":"2024-07-05T10:35:51.410Z","_duration":88,"uid":"5e91d030-029a-4803-9222-5fe793b1449b","cid":"0-0","title":"Then error popup displays \"Epic sadface: Username and password do not match any user in this service\"","fullTitle":"4: Then error popup displays \"Epic sadface: Username and password do not match any user in this service\"","output":[{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.90"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.86"}},"cid":"0-0","type":"result"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.86","ELEMENT":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.86"}]},"cid":"0-0","type":"command"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.90","ELEMENT":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.90"}]},"cid":"0-0","type":"command"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.90","ELEMENT":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.90"}]},"result":{"value":true},"cid":"0-0","type":"result"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.86","ELEMENT":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.86"}]},"result":{"value":true},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.90"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.86"}},"cid":"0-0","type":"result"},{"command":"getElementText","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.86/text","body":{},"cid":"0-0","type":"command"},{"command":"getElementText","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.90/text","body":{},"cid":"0-0","type":"command"},{"command":"getElementText","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.86/text","body":{},"result":{"value":"Epic sadface: Username and password do not match any user in this service"},"cid":"0-0","type":"result"},{"command":"getElementText","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.90/text","body":{},"result":{"value":"Epic sadface: Username and password do not match any user in this service"},"cid":"0-0","type":"result"}],"retries":0,"parent":"4","state":"passed","events":[],"errorIndex":0}],"hooks":[{"type":"hook","start":"2024-07-05T10:35:50.508Z","end":"2024-07-05T10:35:50.509Z","_duration":1,"uid":"c1ea7267-3171-4e41-8858-99efb1a26e21","cid":"0-0","title":"","parent":"4","errors":[]},{"type":"hook","start":"2024-07-05T10:35:51.411Z","end":"2024-07-05T10:35:51.411Z","_duration":0,"uid":"3e6a0f4c-4cae-48b6-af44-d3015dbb3afe","cid":"0-0","title":"","parent":"4","errors":[]}],"suites":[],"parent":"login.feature:3:1","hooksAndTests":[{"type":"hook","start":"2024-07-05T10:35:50.508Z","end":"2024-07-05T10:35:50.509Z","_duration":1,"uid":"c1ea7267-3171-4e41-8858-99efb1a26e21","cid":"0-0","title":"","parent":"4","errors":[]},{"type":"test","start":"2024-07-05T10:35:50.510Z","end":"2024-07-05T10:35:50.636Z","_duration":126,"uid":"d0dc07b0-cdf0-4231-839b-844cc7123de2","cid":"0-0","title":"Given user already on login page","fullTitle":"4: Given user already on login page","output":[{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"cid":"0-0","type":"command"},{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"cid":"0-0","type":"command"},{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"result":{"value":null},"cid":"0-0","type":"result"}],"retries":0,"parent":"4","state":"passed","events":[],"errorIndex":0},{"type":"test","start":"2024-07-05T10:35:50.636Z","end":"2024-07-05T10:35:51.322Z","_duration":686,"uid":"675c1d61-9eca-4ffd-b893-6c0e422327e4","cid":"0-0","title":"When user login using \"loremIpsum\" as username and \"dolorSitAmet\" as password","fullTitle":"4: When user login using \"loremIpsum\" as username and \"dolorSitAmet\" as password","output":[{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.81"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.77"}},"cid":"0-0","type":"result"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.77/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.81/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.81/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.81/value","body":{"text":"loremIpsum"},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.77/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.77/value","body":{"text":"loremIpsum"},"cid":"0-0","type":"command"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.77/value","body":{"text":"loremIpsum"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.81/value","body":{"text":"loremIpsum"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.82"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.78"}},"cid":"0-0","type":"result"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.78/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.82/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.78/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.78/value","body":{"text":"dolorSitAmet"},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.82/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.82/value","body":{"text":"dolorSitAmet"},"cid":"0-0","type":"command"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.82/value","body":{"text":"dolorSitAmet"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.78/value","body":{"text":"dolorSitAmet"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.83"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.79"}},"cid":"0-0","type":"result"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.79/property/value","body":{},"cid":"0-0","type":"command"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.83/property/value","body":{},"cid":"0-0","type":"command"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.83/property/value","body":{},"result":{"value":"Login"},"cid":"0-0","type":"result"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.79/property/value","body":{},"result":{"value":"Login"},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.83"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.79"}},"cid":"0-0","type":"result"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.79/click","body":{},"cid":"0-0","type":"command"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.83/click","body":{},"cid":"0-0","type":"command"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.83/click","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.79/click","body":{},"result":{"value":null},"cid":"0-0","type":"result"}],"retries":0,"parent":"4","state":"passed","events":[],"errorIndex":0},{"type":"test","start":"2024-07-05T10:35:51.322Z","end":"2024-07-05T10:35:51.410Z","_duration":88,"uid":"5e91d030-029a-4803-9222-5fe793b1449b","cid":"0-0","title":"Then error popup displays \"Epic sadface: Username and password do not match any user in this service\"","fullTitle":"4: Then error popup displays \"Epic sadface: Username and password do not match any user in this service\"","output":[{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.90"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.86"}},"cid":"0-0","type":"result"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.86","ELEMENT":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.86"}]},"cid":"0-0","type":"command"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.90","ELEMENT":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.90"}]},"cid":"0-0","type":"command"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.90","ELEMENT":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.90"}]},"result":{"value":true},"cid":"0-0","type":"result"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.86","ELEMENT":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.86"}]},"result":{"value":true},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.90"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.86"}},"cid":"0-0","type":"result"},{"command":"getElementText","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.86/text","body":{},"cid":"0-0","type":"command"},{"command":"getElementText","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.90/text","body":{},"cid":"0-0","type":"command"},{"command":"getElementText","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.42E867837E1927976684F82BA61778EC.e.86/text","body":{},"result":{"value":"Epic sadface: Username and password do not match any user in this service"},"cid":"0-0","type":"result"},{"command":"getElementText","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5AC2063AC4C0375806CC2BEE962152B2.e.90/text","body":{},"result":{"value":"Epic sadface: Username and password do not match any user in this service"},"cid":"0-0","type":"result"}],"retries":0,"parent":"4","state":"passed","events":[],"errorIndex":0},{"type":"hook","start":"2024-07-05T10:35:51.411Z","end":"2024-07-05T10:35:51.411Z","_duration":0,"uid":"3e6a0f4c-4cae-48b6-af44-d3015dbb3afe","cid":"0-0","title":"","parent":"4","errors":[]}],"description":""},{"type":"scenario","start":"2024-07-05T10:35:51.413Z","end":"2024-07-05T10:35:52.356Z","_duration":941,"uid":"5","cid":"0-0","file":"D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\features\\step-definitions\\login.feature","title":"TC-4 Login using random username","fullTitle":"login.feature:3:1: TC-4 Login using random username","tags":[{"name":"@login","astNodeId":"13754335-1730-4aae-91fc-39f885e9f8d1"},{"name":"@TC4","astNodeId":"2178daa7-4812-4760-9347-4533aad15363"},{"name":"@intentional-fail","astNodeId":"cb82ed1b-f29c-419f-ae2e-3a0e0596e87e"}],"tests":[{"type":"test","start":"2024-07-05T10:35:51.415Z","end":"2024-07-05T10:35:51.545Z","_duration":130,"uid":"f62f7a7d-8289-47a4-a196-4d35144cb40a","cid":"0-0","title":"Given user already on login page","fullTitle":"5: Given user already on login page","output":[{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"cid":"0-0","type":"command"},{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"cid":"0-0","type":"command"},{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"result":{"value":null},"cid":"0-0","type":"result"}],"retries":0,"parent":"5","state":"passed","events":[],"errorIndex":0},{"type":"test","start":"2024-07-05T10:35:51.545Z","end":"2024-07-05T10:35:52.123Z","_duration":578,"uid":"47d21d30-14ec-4d57-a008-6cba33b4af1c","cid":"0-0","title":"When user login using \"johndoe\" as username and \"123456\" as password","fullTitle":"5: When user login using \"johndoe\" as username and \"123456\" as password","output":[{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.94"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.90"}},"cid":"0-0","type":"result"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.90/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.94/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.94/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.94/value","body":{"text":"johndoe"},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.90/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.90/value","body":{"text":"johndoe"},"cid":"0-0","type":"command"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.94/value","body":{"text":"johndoe"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.90/value","body":{"text":"johndoe"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.95"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.91"}},"cid":"0-0","type":"result"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.91/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.95/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.95/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.95/value","body":{"text":"123456"},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.91/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.91/value","body":{"text":"123456"},"cid":"0-0","type":"command"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.95/value","body":{"text":"123456"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.91/value","body":{"text":"123456"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.92"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.96"}},"cid":"0-0","type":"result"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.92/property/value","body":{},"cid":"0-0","type":"command"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.96/property/value","body":{},"cid":"0-0","type":"command"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.92/property/value","body":{},"result":{"value":"Login"},"cid":"0-0","type":"result"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.96/property/value","body":{},"result":{"value":"Login"},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.92"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.96"}},"cid":"0-0","type":"result"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.92/click","body":{},"cid":"0-0","type":"command"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.96/click","body":{},"cid":"0-0","type":"command"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.96/click","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.92/click","body":{},"result":{"value":null},"cid":"0-0","type":"result"}],"retries":0,"parent":"5","state":"passed","events":[],"errorIndex":0},{"type":"test","start":"2024-07-05T10:35:52.124Z","end":"2024-07-05T10:35:52.219Z","_duration":95,"uid":"caaab7aa-a64a-4e8e-9b2e-639f251b4928","cid":"0-0","title":"Then error popup displays \"Kamu belum registrasi bro!\"","fullTitle":"5: Then error popup displays \"Kamu belum registrasi bro!\"","output":[{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.103"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.99"}},"cid":"0-0","type":"result"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.99","ELEMENT":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.99"}]},"cid":"0-0","type":"command"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.103","ELEMENT":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.103"}]},"cid":"0-0","type":"command"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.103","ELEMENT":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.103"}]},"result":{"value":true},"cid":"0-0","type":"result"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.99","ELEMENT":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.99"}]},"result":{"value":true},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.103"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.99"}},"cid":"0-0","type":"result"},{"command":"getElementText","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.99/text","body":{},"cid":"0-0","type":"command"},{"command":"getElementText","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.103/text","body":{},"cid":"0-0","type":"command"},{"command":"getElementText","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.103/text","body":{},"result":{"value":"Epic sadface: Username and password do not match any user in this service"},"cid":"0-0","type":"result"},{"command":"getElementText","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.99/text","body":{},"result":{"value":"Epic sadface: Username and password do not match any user in this service"},"cid":"0-0","type":"result"},{"command":"takeScreenshot","method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"cid":"0-0","type":"command"},{"command":"takeScreenshot","method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"cid":"0-0","type":"command"},{"command":"takeScreenshot","method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"result":{"value":""},"cid":"0-0","type":"result"},{"command":"takeScreenshot","method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"result":{"value":""},"cid":"0-0","type":"result"},{"command":"deleteSession","method":"DELETE","endpoint":"/session/:sessionId","body":{},"cid":"0-0","type":"command"},{"command":"deleteSession","method":"DELETE","endpoint":"/session/:sessionId","body":{},"cid":"0-0","type":"command"},{"command":"deleteSession","method":"DELETE","endpoint":"/session/:sessionId","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"deleteSession","method":"DELETE","endpoint":"/session/:sessionId","body":{},"result":{"value":null},"cid":"0-0","type":"result"}],"retries":0,"parent":"5","state":"failed","errors":[{"name":"Error","message":"Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m","stack":"Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"Kamu belum registrasi bro!\"\u001b[39m\nReceived: \u001b[31m\"Epic sadface: Username and password do not match any user in this service\"\u001b[39m\n    at LoginPage.validateErrorPopUpMessage (file:///D:/PERSONAL/LEARN/QA/github/wdio-cucumber1-ds4/features/pageobjects/login.page.js:43:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async World.<anonymous> (file:///D:/PERSONAL/LEARN/QA/github/wdio-cucumber1-ds4/features/step-definitions/steps.js:44:5)\n    at async wrapPromiseWithTimeout (D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\time.js:57:12)\n    at async Object.run (D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\user_code_runner.js:64:22)\n    at async Object.run (D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\runtime\\step_runner.js:51:26)\n    at async TestCaseRunner.invokeStep (D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\runtime\\test_case_runner.js:95:16)\n    at async TestCaseRunner.runStep (D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\runtime\\test_case_runner.js:244:26)\n    at async D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\runtime\\test_case_runner.js:175:44\n    at async TestCaseRunner.aroundTestStep (D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\runtime\\test_case_runner.js:120:32)"}],"error":{"name":"Error","message":"Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m","stack":"Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"Kamu belum registrasi bro!\"\u001b[39m\nReceived: \u001b[31m\"Epic sadface: Username and password do not match any user in this service\"\u001b[39m\n    at LoginPage.validateErrorPopUpMessage (file:///D:/PERSONAL/LEARN/QA/github/wdio-cucumber1-ds4/features/pageobjects/login.page.js:43:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async World.<anonymous> (file:///D:/PERSONAL/LEARN/QA/github/wdio-cucumber1-ds4/features/step-definitions/steps.js:44:5)\n    at async wrapPromiseWithTimeout (D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\time.js:57:12)\n    at async Object.run (D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\user_code_runner.js:64:22)\n    at async Object.run (D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\runtime\\step_runner.js:51:26)\n    at async TestCaseRunner.invokeStep (D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\runtime\\test_case_runner.js:95:16)\n    at async TestCaseRunner.runStep (D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\runtime\\test_case_runner.js:244:26)\n    at async D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\runtime\\test_case_runner.js:175:44\n    at async TestCaseRunner.aroundTestStep (D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\runtime\\test_case_runner.js:120:32)"},"events":[{"type":"Error","value":{"name":"Error","message":"Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m","stack":"Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"Kamu belum registrasi bro!\"\u001b[39m\nReceived: \u001b[31m\"Epic sadface: Username and password do not match any user in this service\"\u001b[39m\n    at LoginPage.validateErrorPopUpMessage (file:///D:/PERSONAL/LEARN/QA/github/wdio-cucumber1-ds4/features/pageobjects/login.page.js:43:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async World.<anonymous> (file:///D:/PERSONAL/LEARN/QA/github/wdio-cucumber1-ds4/features/step-definitions/steps.js:44:5)\n    at async wrapPromiseWithTimeout (D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\time.js:57:12)\n    at async Object.run (D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\user_code_runner.js:64:22)\n    at async Object.run (D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\runtime\\step_runner.js:51:26)\n    at async TestCaseRunner.invokeStep (D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\runtime\\test_case_runner.js:95:16)\n    at async TestCaseRunner.runStep (D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\runtime\\test_case_runner.js:244:26)\n    at async D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\runtime\\test_case_runner.js:175:44\n    at async TestCaseRunner.aroundTestStep (D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\runtime\\test_case_runner.js:120:32)"}}],"errorIndex":1}],"hooks":[{"type":"hook","start":"2024-07-05T10:35:51.414Z","end":"2024-07-05T10:35:51.414Z","_duration":0,"uid":"6a2e685a-132d-46c8-bdac-af42dee21b4a","cid":"0-0","title":"","parent":"5","errors":[]},{"type":"hook","start":"2024-07-05T10:35:52.220Z","end":"2024-07-05T10:35:52.354Z","_duration":134,"uid":"b799f342-2723-4767-989b-035ecf8f8e2b","cid":"0-0","title":"","parent":"5","errors":[]}],"suites":[],"parent":"login.feature:3:1","hooksAndTests":[{"type":"hook","start":"2024-07-05T10:35:51.414Z","end":"2024-07-05T10:35:51.414Z","_duration":0,"uid":"6a2e685a-132d-46c8-bdac-af42dee21b4a","cid":"0-0","title":"","parent":"5","errors":[]},{"type":"test","start":"2024-07-05T10:35:51.415Z","end":"2024-07-05T10:35:51.545Z","_duration":130,"uid":"f62f7a7d-8289-47a4-a196-4d35144cb40a","cid":"0-0","title":"Given user already on login page","fullTitle":"5: Given user already on login page","output":[{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"cid":"0-0","type":"command"},{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"cid":"0-0","type":"command"},{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"navigateTo","method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://www.saucedemo.com/"},"result":{"value":null},"cid":"0-0","type":"result"}],"retries":0,"parent":"5","state":"passed","events":[],"errorIndex":0},{"type":"test","start":"2024-07-05T10:35:51.545Z","end":"2024-07-05T10:35:52.123Z","_duration":578,"uid":"47d21d30-14ec-4d57-a008-6cba33b4af1c","cid":"0-0","title":"When user login using \"johndoe\" as username and \"123456\" as password","fullTitle":"5: When user login using \"johndoe\" as username and \"123456\" as password","output":[{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.94"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@id='user-name']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.90"}},"cid":"0-0","type":"result"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.90/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.94/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.94/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.94/value","body":{"text":"johndoe"},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.90/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.90/value","body":{"text":"johndoe"},"cid":"0-0","type":"command"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.94/value","body":{"text":"johndoe"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.90/value","body":{"text":"johndoe"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.95"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@name='password']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.91"}},"cid":"0-0","type":"result"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.91/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.95/clear","body":{},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.95/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.95/value","body":{"text":"123456"},"cid":"0-0","type":"command"},{"command":"elementClear","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.91/clear","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.91/value","body":{"text":"123456"},"cid":"0-0","type":"command"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.95/value","body":{"text":"123456"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementSendKeys","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.91/value","body":{"text":"123456"},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.92"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.96"}},"cid":"0-0","type":"result"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.92/property/value","body":{},"cid":"0-0","type":"command"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.96/property/value","body":{},"cid":"0-0","type":"command"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.92/property/value","body":{},"result":{"value":"Login"},"cid":"0-0","type":"result"},{"command":"getElementProperty","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.96/property/value","body":{},"result":{"value":"Login"},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.92"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//input[@class='submit-button btn_action']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.96"}},"cid":"0-0","type":"result"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.92/click","body":{},"cid":"0-0","type":"command"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.96/click","body":{},"cid":"0-0","type":"command"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.96/click","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"elementClick","method":"POST","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.92/click","body":{},"result":{"value":null},"cid":"0-0","type":"result"}],"retries":0,"parent":"5","state":"passed","events":[],"errorIndex":0},{"type":"test","start":"2024-07-05T10:35:52.124Z","end":"2024-07-05T10:35:52.219Z","_duration":95,"uid":"caaab7aa-a64a-4e8e-9b2e-639f251b4928","cid":"0-0","title":"Then error popup displays \"Kamu belum registrasi bro!\"","fullTitle":"5: Then error popup displays \"Kamu belum registrasi bro!\"","output":[{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.103"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.99"}},"cid":"0-0","type":"result"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.99","ELEMENT":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.99"}]},"cid":"0-0","type":"command"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.103","ELEMENT":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.103"}]},"cid":"0-0","type":"command"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.103","ELEMENT":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.103"}]},"result":{"value":true},"cid":"0-0","type":"result"},{"command":"executeScript","method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element)) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if ('ShadowRoot' in window && element instanceof window.ShadowRoot) {\n            element = element.host;\n        }\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementHasBoundingBox(element) {\n        const boundingBox = element.getBoundingClientRect();\n        return boundingBox.width > 0 && boundingBox.height > 0;\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        if (elementHasBoundingBox(element)) {\n            return true;\n        }\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        const boundingBox = element.getBoundingClientRect();\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return [].some.call(element.childNodes, function (childNode) {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return [].every.call(element.childNodes, function (childNode) {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    // walk up the tree testing for a shadow root\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    // This is a partial reimplementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!isElementInsideShadowRoot(element) &&\n        (\n        // IE doesn't support document.contains, therefor check before using\n        typeof document.contains === 'function'\n            ? !document.contains(element)\n            : !document.body.contains(element))) {\n        return false;\n    }\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, function (e) {\n                return e.tagName.toUpperCase() === 'SELECT';\n            });\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        // case 'MAP':\n        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, function (e) {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element) && !elementHasBoundingBox(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.99","ELEMENT":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.99"}]},"result":{"value":true},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"cid":"0-0","type":"command"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.103"}},"cid":"0-0","type":"result"},{"command":"findElement","method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"xpath","value":"//h3[@data-test='error']"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.99"}},"cid":"0-0","type":"result"},{"command":"getElementText","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.99/text","body":{},"cid":"0-0","type":"command"},{"command":"getElementText","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.103/text","body":{},"cid":"0-0","type":"command"},{"command":"getElementText","method":"GET","endpoint":"/session/:sessionId/element/f.D1612D7F22F974032D11C6F2A9D4C699.d.5C872AB528B03E7090A3926B3985404E.e.103/text","body":{},"result":{"value":"Epic sadface: Username and password do not match any user in this service"},"cid":"0-0","type":"result"},{"command":"getElementText","method":"GET","endpoint":"/session/:sessionId/element/f.CFFAE3A246AA67F5C05C837D5E1DBD0E.d.CF9D9C862AE4624D95441F020BA8CC79.e.99/text","body":{},"result":{"value":"Epic sadface: Username and password do not match any user in this service"},"cid":"0-0","type":"result"},{"command":"takeScreenshot","method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"cid":"0-0","type":"command"},{"command":"takeScreenshot","method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"cid":"0-0","type":"command"},{"command":"takeScreenshot","method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"result":{"value":""},"cid":"0-0","type":"result"},{"command":"takeScreenshot","method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"result":{"value":""},"cid":"0-0","type":"result"},{"command":"deleteSession","method":"DELETE","endpoint":"/session/:sessionId","body":{},"cid":"0-0","type":"command"},{"command":"deleteSession","method":"DELETE","endpoint":"/session/:sessionId","body":{},"cid":"0-0","type":"command"},{"command":"deleteSession","method":"DELETE","endpoint":"/session/:sessionId","body":{},"result":{"value":null},"cid":"0-0","type":"result"},{"command":"deleteSession","method":"DELETE","endpoint":"/session/:sessionId","body":{},"result":{"value":null},"cid":"0-0","type":"result"}],"retries":0,"parent":"5","state":"failed","errors":[{"name":"Error","message":"Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m","stack":"Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"Kamu belum registrasi bro!\"\u001b[39m\nReceived: \u001b[31m\"Epic sadface: Username and password do not match any user in this service\"\u001b[39m\n    at LoginPage.validateErrorPopUpMessage (file:///D:/PERSONAL/LEARN/QA/github/wdio-cucumber1-ds4/features/pageobjects/login.page.js:43:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async World.<anonymous> (file:///D:/PERSONAL/LEARN/QA/github/wdio-cucumber1-ds4/features/step-definitions/steps.js:44:5)\n    at async wrapPromiseWithTimeout (D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\time.js:57:12)\n    at async Object.run (D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\user_code_runner.js:64:22)\n    at async Object.run (D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\runtime\\step_runner.js:51:26)\n    at async TestCaseRunner.invokeStep (D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\runtime\\test_case_runner.js:95:16)\n    at async TestCaseRunner.runStep (D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\runtime\\test_case_runner.js:244:26)\n    at async D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\runtime\\test_case_runner.js:175:44\n    at async TestCaseRunner.aroundTestStep (D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\runtime\\test_case_runner.js:120:32)"}],"error":{"name":"Error","message":"Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m","stack":"Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"Kamu belum registrasi bro!\"\u001b[39m\nReceived: \u001b[31m\"Epic sadface: Username and password do not match any user in this service\"\u001b[39m\n    at LoginPage.validateErrorPopUpMessage (file:///D:/PERSONAL/LEARN/QA/github/wdio-cucumber1-ds4/features/pageobjects/login.page.js:43:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async World.<anonymous> (file:///D:/PERSONAL/LEARN/QA/github/wdio-cucumber1-ds4/features/step-definitions/steps.js:44:5)\n    at async wrapPromiseWithTimeout (D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\time.js:57:12)\n    at async Object.run (D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\user_code_runner.js:64:22)\n    at async Object.run (D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\runtime\\step_runner.js:51:26)\n    at async TestCaseRunner.invokeStep (D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\runtime\\test_case_runner.js:95:16)\n    at async TestCaseRunner.runStep (D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\runtime\\test_case_runner.js:244:26)\n    at async D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\runtime\\test_case_runner.js:175:44\n    at async TestCaseRunner.aroundTestStep (D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\runtime\\test_case_runner.js:120:32)"},"events":[{"type":"Error","value":{"name":"Error","message":"Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m","stack":"Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"Kamu belum registrasi bro!\"\u001b[39m\nReceived: \u001b[31m\"Epic sadface: Username and password do not match any user in this service\"\u001b[39m\n    at LoginPage.validateErrorPopUpMessage (file:///D:/PERSONAL/LEARN/QA/github/wdio-cucumber1-ds4/features/pageobjects/login.page.js:43:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async World.<anonymous> (file:///D:/PERSONAL/LEARN/QA/github/wdio-cucumber1-ds4/features/step-definitions/steps.js:44:5)\n    at async wrapPromiseWithTimeout (D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\time.js:57:12)\n    at async Object.run (D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\user_code_runner.js:64:22)\n    at async Object.run (D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\runtime\\step_runner.js:51:26)\n    at async TestCaseRunner.invokeStep (D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\runtime\\test_case_runner.js:95:16)\n    at async TestCaseRunner.runStep (D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\runtime\\test_case_runner.js:244:26)\n    at async D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\runtime\\test_case_runner.js:175:44\n    at async TestCaseRunner.aroundTestStep (D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\node_modules\\@cucumber\\cucumber\\lib\\runtime\\test_case_runner.js:120:32)"}}],"errorIndex":1},{"type":"hook","start":"2024-07-05T10:35:52.220Z","end":"2024-07-05T10:35:52.354Z","_duration":134,"uid":"b799f342-2723-4767-989b-035ecf8f8e2b","cid":"0-0","title":"","parent":"5","errors":[]}],"description":""}],"hooksAndTests":[],"description":""}],"reportFile":"D:\\PERSONAL\\LEARN\\QA\\github\\wdio-cucumber1-ds4\\reports\\html\\html-report-2024-07-05_17-35-33\\master-report-cb67a19e-59fb-4c99-94f2-2a0a22f0f9b5-0-0.html","browserName":"Chrome & Edge"}